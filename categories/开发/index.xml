<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>开发 - 分类 - 虚无空间</title><link>https://zefrawendi.github.io/categories/%E5%BC%80%E5%8F%91/</link><description>开发 - 分类 - 虚无空间</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 11 Nov 2022 11:23:50 +0800</lastBuildDate><atom:link href="https://zefrawendi.github.io/categories/%E5%BC%80%E5%8F%91/" rel="self" type="application/rss+xml"/><item><title>go程序打成rpm包</title><link>https://zefrawendi.github.io/posts/%E6%89%93%E6%88%90rpm%E5%8C%85/</link><pubDate>Fri, 11 Nov 2022 11:23:50 +0800</pubDate><author>Zefrawendi</author><guid>https://zefrawendi.github.io/posts/%E6%89%93%E6%88%90rpm%E5%8C%85/</guid><description># 1. 环境准备 首先是 rpmbuild 的相关依赖，无论是什么语言写的程序，只要是打包成 rpm 包，就都需要这些 1 yum install -y gcc make rpm-build redhat-rpm-config rpmbuild 的使用，需要你写不少的配置，非常繁琐</description></item><item><title>go context</title><link>https://zefrawendi.github.io/posts/go-context/</link><pubDate>Fri, 28 Oct 2022 09:47:50 +0800</pubDate><author>Zefrawendi</author><guid>https://zefrawendi.github.io/posts/go-context/</guid><description>一、为什么使用context （1）go的扛把子 要论go最津津乐道的功能莫过于go强大而简洁的并发能力。 1 2 3 4 5 func main() { go func() { fmt.Println(&amp;#34;Hello World&amp;#34;) }() } 通过简单</description></item><item><title>grpc</title><link>https://zefrawendi.github.io/posts/grpc/</link><pubDate>Wed, 26 Oct 2022 11:45:48 +0800</pubDate><author>Zefrawendi</author><guid>https://zefrawendi.github.io/posts/grpc/</guid><description>初始化项目 新建相关文件夹 1 2 3 4 mkdir -p pc-book/{proto,pb} # proto 用于存放protobuf文件 # pb用于存放生成好的go代码 最终目录结构如下 1 2 3 4 5 6 7 . ├── README</description></item><item><title>Zap日志库的使用</title><link>https://zefrawendi.github.io/posts/zap%E6%97%A5%E5%BF%97%E5%BA%93/</link><pubDate>Thu, 20 Oct 2022 10:46:48 +0800</pubDate><author>Zefrawendi</author><guid>https://zefrawendi.github.io/posts/zap%E6%97%A5%E5%BF%97%E5%BA%93/</guid><description>本文先介绍了Go语言原生的日志库的使用，然后详细介绍了非常流行的Uber开源的zap日志库，同时介绍了如何搭配Lumberjack实现日志的</description></item><item><title>Go Pretty</title><link>https://zefrawendi.github.io/posts/go-pretty/</link><pubDate>Wed, 19 Oct 2022 15:44:48 +0800</pubDate><author>Zefrawendi</author><guid>https://zefrawendi.github.io/posts/go-pretty/</guid><description>用于美化表格，列表，进度条，文本等的控制台输出 jedib0t/go-pretty: Table-writer and more in golang! (github.com) table 可以在输出美化的表格 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29</description></item></channel></rss>